{
	"env": {
		"commonjs": true,
		"browser": true,
		"es6": true
	},
	"extends": [
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:react/recommended",
		"prettier/@typescript-eslint"
	],
	"plugins": ["prettier", "@typescript-eslint"],
	"globals": {
		"Atomics": "readonly",
		"SharedArrayBuffer": "readonly"
	},
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": 8,
		"sourceType": "module",
		"ecmaFeatures": {
			"jsx": true
		}
	},
	"rules": {
		"prettier/prettier": "error",
		"indent": ["error", "tab", { "SwitchCase": 1 }],
		"linebreak-style": ["error", "unix"],
		"quotes": ["error", "single"],
		"semi": ["error", "never"],
		"no-prototype-builtins": ["off"],
		"comma-dangle": [
			"error",
			{
				"functions": "never",
				"objects": "only-multiline",
				"arrays": "only-multiline"
			}
		],
		"no-trailing-spaces": "off",
		"padding-line-between-statements": [
			"error",
			{
				"blankLine": "always",
				"prev": "if",
				"next": "expression"
			}
		],
		"no-unused-vars": [
			"error",
			{
				"argsIgnorePattern": "^_"
			}
		],
		"@typescript-eslint/no-explicit-any": ["error", false]
	},
	"settings": {
		"react": {
			"createClass": "createReactClass", // Regex for Component Factory to use,
			// default to "createReactClass"
			"pragma": "React", // Pragma to use, default to "React"
			"version": "detect", // React version. "detect" automatically picks the version you have installed.
			// You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
			// default to latest and warns if missing
			// It will default to "detect" in the future
			"flowVersion": "0.53" // Flow version
		},
		"propWrapperFunctions": [
			// The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
			"forbidExtraProps",
			{ "property": "freeze", "object": "Object" },
			{ "property": "myFavoriteWrapper" }
		],
		"linkComponents": [
			// Components used as alternatives to <a> for linking, eg. <Link to={ url } />
			"Hyperlink",
			{ "name": "Link", "linkAttribute": "to" }
		]
	}
}
